#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1525046797953799792) {
   out_1525046797953799792[0] = 0;
   out_1525046797953799792[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1525046797953799792[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1525046797953799792[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1525046797953799792[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1525046797953799792[5] = -sin(in_vec[1]);
   out_1525046797953799792[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1525046797953799792[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1525046797953799792[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1525046797953799792[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1525046797953799792[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1525046797953799792[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1525046797953799792[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1525046797953799792[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1525046797953799792[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1525046797953799792[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1525046797953799792[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1525046797953799792[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6787273198622262185) {
   out_6787273198622262185[0] = delta_x[0] + nom_x[0];
   out_6787273198622262185[1] = delta_x[1] + nom_x[1];
   out_6787273198622262185[2] = delta_x[2] + nom_x[2];
   out_6787273198622262185[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6787273198622262185[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6787273198622262185[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6787273198622262185[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6787273198622262185[7] = delta_x[6] + nom_x[7];
   out_6787273198622262185[8] = delta_x[7] + nom_x[8];
   out_6787273198622262185[9] = delta_x[8] + nom_x[9];
   out_6787273198622262185[10] = delta_x[9] + nom_x[10];
   out_6787273198622262185[11] = delta_x[10] + nom_x[11];
   out_6787273198622262185[12] = delta_x[11] + nom_x[12];
   out_6787273198622262185[13] = delta_x[12] + nom_x[13];
   out_6787273198622262185[14] = delta_x[13] + nom_x[14];
   out_6787273198622262185[15] = delta_x[14] + nom_x[15];
   out_6787273198622262185[16] = delta_x[15] + nom_x[16];
   out_6787273198622262185[17] = delta_x[16] + nom_x[17];
   out_6787273198622262185[18] = delta_x[17] + nom_x[18];
   out_6787273198622262185[19] = delta_x[18] + nom_x[19];
   out_6787273198622262185[20] = delta_x[19] + nom_x[20];
   out_6787273198622262185[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1163963483344490897) {
   out_1163963483344490897[0] = -nom_x[0] + true_x[0];
   out_1163963483344490897[1] = -nom_x[1] + true_x[1];
   out_1163963483344490897[2] = -nom_x[2] + true_x[2];
   out_1163963483344490897[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1163963483344490897[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1163963483344490897[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1163963483344490897[6] = -nom_x[7] + true_x[7];
   out_1163963483344490897[7] = -nom_x[8] + true_x[8];
   out_1163963483344490897[8] = -nom_x[9] + true_x[9];
   out_1163963483344490897[9] = -nom_x[10] + true_x[10];
   out_1163963483344490897[10] = -nom_x[11] + true_x[11];
   out_1163963483344490897[11] = -nom_x[12] + true_x[12];
   out_1163963483344490897[12] = -nom_x[13] + true_x[13];
   out_1163963483344490897[13] = -nom_x[14] + true_x[14];
   out_1163963483344490897[14] = -nom_x[15] + true_x[15];
   out_1163963483344490897[15] = -nom_x[16] + true_x[16];
   out_1163963483344490897[16] = -nom_x[17] + true_x[17];
   out_1163963483344490897[17] = -nom_x[18] + true_x[18];
   out_1163963483344490897[18] = -nom_x[19] + true_x[19];
   out_1163963483344490897[19] = -nom_x[20] + true_x[20];
   out_1163963483344490897[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2148830550237504684) {
   out_2148830550237504684[0] = 1.0;
   out_2148830550237504684[1] = 0;
   out_2148830550237504684[2] = 0;
   out_2148830550237504684[3] = 0;
   out_2148830550237504684[4] = 0;
   out_2148830550237504684[5] = 0;
   out_2148830550237504684[6] = 0;
   out_2148830550237504684[7] = 0;
   out_2148830550237504684[8] = 0;
   out_2148830550237504684[9] = 0;
   out_2148830550237504684[10] = 0;
   out_2148830550237504684[11] = 0;
   out_2148830550237504684[12] = 0;
   out_2148830550237504684[13] = 0;
   out_2148830550237504684[14] = 0;
   out_2148830550237504684[15] = 0;
   out_2148830550237504684[16] = 0;
   out_2148830550237504684[17] = 0;
   out_2148830550237504684[18] = 0;
   out_2148830550237504684[19] = 0;
   out_2148830550237504684[20] = 0;
   out_2148830550237504684[21] = 0;
   out_2148830550237504684[22] = 1.0;
   out_2148830550237504684[23] = 0;
   out_2148830550237504684[24] = 0;
   out_2148830550237504684[25] = 0;
   out_2148830550237504684[26] = 0;
   out_2148830550237504684[27] = 0;
   out_2148830550237504684[28] = 0;
   out_2148830550237504684[29] = 0;
   out_2148830550237504684[30] = 0;
   out_2148830550237504684[31] = 0;
   out_2148830550237504684[32] = 0;
   out_2148830550237504684[33] = 0;
   out_2148830550237504684[34] = 0;
   out_2148830550237504684[35] = 0;
   out_2148830550237504684[36] = 0;
   out_2148830550237504684[37] = 0;
   out_2148830550237504684[38] = 0;
   out_2148830550237504684[39] = 0;
   out_2148830550237504684[40] = 0;
   out_2148830550237504684[41] = 0;
   out_2148830550237504684[42] = 0;
   out_2148830550237504684[43] = 0;
   out_2148830550237504684[44] = 1.0;
   out_2148830550237504684[45] = 0;
   out_2148830550237504684[46] = 0;
   out_2148830550237504684[47] = 0;
   out_2148830550237504684[48] = 0;
   out_2148830550237504684[49] = 0;
   out_2148830550237504684[50] = 0;
   out_2148830550237504684[51] = 0;
   out_2148830550237504684[52] = 0;
   out_2148830550237504684[53] = 0;
   out_2148830550237504684[54] = 0;
   out_2148830550237504684[55] = 0;
   out_2148830550237504684[56] = 0;
   out_2148830550237504684[57] = 0;
   out_2148830550237504684[58] = 0;
   out_2148830550237504684[59] = 0;
   out_2148830550237504684[60] = 0;
   out_2148830550237504684[61] = 0;
   out_2148830550237504684[62] = 0;
   out_2148830550237504684[63] = 0;
   out_2148830550237504684[64] = 0;
   out_2148830550237504684[65] = 0;
   out_2148830550237504684[66] = -0.5*state[4];
   out_2148830550237504684[67] = -0.5*state[5];
   out_2148830550237504684[68] = -0.5*state[6];
   out_2148830550237504684[69] = 0;
   out_2148830550237504684[70] = 0;
   out_2148830550237504684[71] = 0;
   out_2148830550237504684[72] = 0;
   out_2148830550237504684[73] = 0;
   out_2148830550237504684[74] = 0;
   out_2148830550237504684[75] = 0;
   out_2148830550237504684[76] = 0;
   out_2148830550237504684[77] = 0;
   out_2148830550237504684[78] = 0;
   out_2148830550237504684[79] = 0;
   out_2148830550237504684[80] = 0;
   out_2148830550237504684[81] = 0;
   out_2148830550237504684[82] = 0;
   out_2148830550237504684[83] = 0;
   out_2148830550237504684[84] = 0;
   out_2148830550237504684[85] = 0;
   out_2148830550237504684[86] = 0;
   out_2148830550237504684[87] = 0.5*state[3];
   out_2148830550237504684[88] = 0.5*state[6];
   out_2148830550237504684[89] = -0.5*state[5];
   out_2148830550237504684[90] = 0;
   out_2148830550237504684[91] = 0;
   out_2148830550237504684[92] = 0;
   out_2148830550237504684[93] = 0;
   out_2148830550237504684[94] = 0;
   out_2148830550237504684[95] = 0;
   out_2148830550237504684[96] = 0;
   out_2148830550237504684[97] = 0;
   out_2148830550237504684[98] = 0;
   out_2148830550237504684[99] = 0;
   out_2148830550237504684[100] = 0;
   out_2148830550237504684[101] = 0;
   out_2148830550237504684[102] = 0;
   out_2148830550237504684[103] = 0;
   out_2148830550237504684[104] = 0;
   out_2148830550237504684[105] = 0;
   out_2148830550237504684[106] = 0;
   out_2148830550237504684[107] = 0;
   out_2148830550237504684[108] = -0.5*state[6];
   out_2148830550237504684[109] = 0.5*state[3];
   out_2148830550237504684[110] = 0.5*state[4];
   out_2148830550237504684[111] = 0;
   out_2148830550237504684[112] = 0;
   out_2148830550237504684[113] = 0;
   out_2148830550237504684[114] = 0;
   out_2148830550237504684[115] = 0;
   out_2148830550237504684[116] = 0;
   out_2148830550237504684[117] = 0;
   out_2148830550237504684[118] = 0;
   out_2148830550237504684[119] = 0;
   out_2148830550237504684[120] = 0;
   out_2148830550237504684[121] = 0;
   out_2148830550237504684[122] = 0;
   out_2148830550237504684[123] = 0;
   out_2148830550237504684[124] = 0;
   out_2148830550237504684[125] = 0;
   out_2148830550237504684[126] = 0;
   out_2148830550237504684[127] = 0;
   out_2148830550237504684[128] = 0;
   out_2148830550237504684[129] = 0.5*state[5];
   out_2148830550237504684[130] = -0.5*state[4];
   out_2148830550237504684[131] = 0.5*state[3];
   out_2148830550237504684[132] = 0;
   out_2148830550237504684[133] = 0;
   out_2148830550237504684[134] = 0;
   out_2148830550237504684[135] = 0;
   out_2148830550237504684[136] = 0;
   out_2148830550237504684[137] = 0;
   out_2148830550237504684[138] = 0;
   out_2148830550237504684[139] = 0;
   out_2148830550237504684[140] = 0;
   out_2148830550237504684[141] = 0;
   out_2148830550237504684[142] = 0;
   out_2148830550237504684[143] = 0;
   out_2148830550237504684[144] = 0;
   out_2148830550237504684[145] = 0;
   out_2148830550237504684[146] = 0;
   out_2148830550237504684[147] = 0;
   out_2148830550237504684[148] = 0;
   out_2148830550237504684[149] = 0;
   out_2148830550237504684[150] = 0;
   out_2148830550237504684[151] = 0;
   out_2148830550237504684[152] = 0;
   out_2148830550237504684[153] = 1.0;
   out_2148830550237504684[154] = 0;
   out_2148830550237504684[155] = 0;
   out_2148830550237504684[156] = 0;
   out_2148830550237504684[157] = 0;
   out_2148830550237504684[158] = 0;
   out_2148830550237504684[159] = 0;
   out_2148830550237504684[160] = 0;
   out_2148830550237504684[161] = 0;
   out_2148830550237504684[162] = 0;
   out_2148830550237504684[163] = 0;
   out_2148830550237504684[164] = 0;
   out_2148830550237504684[165] = 0;
   out_2148830550237504684[166] = 0;
   out_2148830550237504684[167] = 0;
   out_2148830550237504684[168] = 0;
   out_2148830550237504684[169] = 0;
   out_2148830550237504684[170] = 0;
   out_2148830550237504684[171] = 0;
   out_2148830550237504684[172] = 0;
   out_2148830550237504684[173] = 0;
   out_2148830550237504684[174] = 0;
   out_2148830550237504684[175] = 1.0;
   out_2148830550237504684[176] = 0;
   out_2148830550237504684[177] = 0;
   out_2148830550237504684[178] = 0;
   out_2148830550237504684[179] = 0;
   out_2148830550237504684[180] = 0;
   out_2148830550237504684[181] = 0;
   out_2148830550237504684[182] = 0;
   out_2148830550237504684[183] = 0;
   out_2148830550237504684[184] = 0;
   out_2148830550237504684[185] = 0;
   out_2148830550237504684[186] = 0;
   out_2148830550237504684[187] = 0;
   out_2148830550237504684[188] = 0;
   out_2148830550237504684[189] = 0;
   out_2148830550237504684[190] = 0;
   out_2148830550237504684[191] = 0;
   out_2148830550237504684[192] = 0;
   out_2148830550237504684[193] = 0;
   out_2148830550237504684[194] = 0;
   out_2148830550237504684[195] = 0;
   out_2148830550237504684[196] = 0;
   out_2148830550237504684[197] = 1.0;
   out_2148830550237504684[198] = 0;
   out_2148830550237504684[199] = 0;
   out_2148830550237504684[200] = 0;
   out_2148830550237504684[201] = 0;
   out_2148830550237504684[202] = 0;
   out_2148830550237504684[203] = 0;
   out_2148830550237504684[204] = 0;
   out_2148830550237504684[205] = 0;
   out_2148830550237504684[206] = 0;
   out_2148830550237504684[207] = 0;
   out_2148830550237504684[208] = 0;
   out_2148830550237504684[209] = 0;
   out_2148830550237504684[210] = 0;
   out_2148830550237504684[211] = 0;
   out_2148830550237504684[212] = 0;
   out_2148830550237504684[213] = 0;
   out_2148830550237504684[214] = 0;
   out_2148830550237504684[215] = 0;
   out_2148830550237504684[216] = 0;
   out_2148830550237504684[217] = 0;
   out_2148830550237504684[218] = 0;
   out_2148830550237504684[219] = 1.0;
   out_2148830550237504684[220] = 0;
   out_2148830550237504684[221] = 0;
   out_2148830550237504684[222] = 0;
   out_2148830550237504684[223] = 0;
   out_2148830550237504684[224] = 0;
   out_2148830550237504684[225] = 0;
   out_2148830550237504684[226] = 0;
   out_2148830550237504684[227] = 0;
   out_2148830550237504684[228] = 0;
   out_2148830550237504684[229] = 0;
   out_2148830550237504684[230] = 0;
   out_2148830550237504684[231] = 0;
   out_2148830550237504684[232] = 0;
   out_2148830550237504684[233] = 0;
   out_2148830550237504684[234] = 0;
   out_2148830550237504684[235] = 0;
   out_2148830550237504684[236] = 0;
   out_2148830550237504684[237] = 0;
   out_2148830550237504684[238] = 0;
   out_2148830550237504684[239] = 0;
   out_2148830550237504684[240] = 0;
   out_2148830550237504684[241] = 1.0;
   out_2148830550237504684[242] = 0;
   out_2148830550237504684[243] = 0;
   out_2148830550237504684[244] = 0;
   out_2148830550237504684[245] = 0;
   out_2148830550237504684[246] = 0;
   out_2148830550237504684[247] = 0;
   out_2148830550237504684[248] = 0;
   out_2148830550237504684[249] = 0;
   out_2148830550237504684[250] = 0;
   out_2148830550237504684[251] = 0;
   out_2148830550237504684[252] = 0;
   out_2148830550237504684[253] = 0;
   out_2148830550237504684[254] = 0;
   out_2148830550237504684[255] = 0;
   out_2148830550237504684[256] = 0;
   out_2148830550237504684[257] = 0;
   out_2148830550237504684[258] = 0;
   out_2148830550237504684[259] = 0;
   out_2148830550237504684[260] = 0;
   out_2148830550237504684[261] = 0;
   out_2148830550237504684[262] = 0;
   out_2148830550237504684[263] = 1.0;
   out_2148830550237504684[264] = 0;
   out_2148830550237504684[265] = 0;
   out_2148830550237504684[266] = 0;
   out_2148830550237504684[267] = 0;
   out_2148830550237504684[268] = 0;
   out_2148830550237504684[269] = 0;
   out_2148830550237504684[270] = 0;
   out_2148830550237504684[271] = 0;
   out_2148830550237504684[272] = 0;
   out_2148830550237504684[273] = 0;
   out_2148830550237504684[274] = 0;
   out_2148830550237504684[275] = 0;
   out_2148830550237504684[276] = 0;
   out_2148830550237504684[277] = 0;
   out_2148830550237504684[278] = 0;
   out_2148830550237504684[279] = 0;
   out_2148830550237504684[280] = 0;
   out_2148830550237504684[281] = 0;
   out_2148830550237504684[282] = 0;
   out_2148830550237504684[283] = 0;
   out_2148830550237504684[284] = 0;
   out_2148830550237504684[285] = 1.0;
   out_2148830550237504684[286] = 0;
   out_2148830550237504684[287] = 0;
   out_2148830550237504684[288] = 0;
   out_2148830550237504684[289] = 0;
   out_2148830550237504684[290] = 0;
   out_2148830550237504684[291] = 0;
   out_2148830550237504684[292] = 0;
   out_2148830550237504684[293] = 0;
   out_2148830550237504684[294] = 0;
   out_2148830550237504684[295] = 0;
   out_2148830550237504684[296] = 0;
   out_2148830550237504684[297] = 0;
   out_2148830550237504684[298] = 0;
   out_2148830550237504684[299] = 0;
   out_2148830550237504684[300] = 0;
   out_2148830550237504684[301] = 0;
   out_2148830550237504684[302] = 0;
   out_2148830550237504684[303] = 0;
   out_2148830550237504684[304] = 0;
   out_2148830550237504684[305] = 0;
   out_2148830550237504684[306] = 0;
   out_2148830550237504684[307] = 1.0;
   out_2148830550237504684[308] = 0;
   out_2148830550237504684[309] = 0;
   out_2148830550237504684[310] = 0;
   out_2148830550237504684[311] = 0;
   out_2148830550237504684[312] = 0;
   out_2148830550237504684[313] = 0;
   out_2148830550237504684[314] = 0;
   out_2148830550237504684[315] = 0;
   out_2148830550237504684[316] = 0;
   out_2148830550237504684[317] = 0;
   out_2148830550237504684[318] = 0;
   out_2148830550237504684[319] = 0;
   out_2148830550237504684[320] = 0;
   out_2148830550237504684[321] = 0;
   out_2148830550237504684[322] = 0;
   out_2148830550237504684[323] = 0;
   out_2148830550237504684[324] = 0;
   out_2148830550237504684[325] = 0;
   out_2148830550237504684[326] = 0;
   out_2148830550237504684[327] = 0;
   out_2148830550237504684[328] = 0;
   out_2148830550237504684[329] = 1.0;
   out_2148830550237504684[330] = 0;
   out_2148830550237504684[331] = 0;
   out_2148830550237504684[332] = 0;
   out_2148830550237504684[333] = 0;
   out_2148830550237504684[334] = 0;
   out_2148830550237504684[335] = 0;
   out_2148830550237504684[336] = 0;
   out_2148830550237504684[337] = 0;
   out_2148830550237504684[338] = 0;
   out_2148830550237504684[339] = 0;
   out_2148830550237504684[340] = 0;
   out_2148830550237504684[341] = 0;
   out_2148830550237504684[342] = 0;
   out_2148830550237504684[343] = 0;
   out_2148830550237504684[344] = 0;
   out_2148830550237504684[345] = 0;
   out_2148830550237504684[346] = 0;
   out_2148830550237504684[347] = 0;
   out_2148830550237504684[348] = 0;
   out_2148830550237504684[349] = 0;
   out_2148830550237504684[350] = 0;
   out_2148830550237504684[351] = 1.0;
   out_2148830550237504684[352] = 0;
   out_2148830550237504684[353] = 0;
   out_2148830550237504684[354] = 0;
   out_2148830550237504684[355] = 0;
   out_2148830550237504684[356] = 0;
   out_2148830550237504684[357] = 0;
   out_2148830550237504684[358] = 0;
   out_2148830550237504684[359] = 0;
   out_2148830550237504684[360] = 0;
   out_2148830550237504684[361] = 0;
   out_2148830550237504684[362] = 0;
   out_2148830550237504684[363] = 0;
   out_2148830550237504684[364] = 0;
   out_2148830550237504684[365] = 0;
   out_2148830550237504684[366] = 0;
   out_2148830550237504684[367] = 0;
   out_2148830550237504684[368] = 0;
   out_2148830550237504684[369] = 0;
   out_2148830550237504684[370] = 0;
   out_2148830550237504684[371] = 0;
   out_2148830550237504684[372] = 0;
   out_2148830550237504684[373] = 1.0;
   out_2148830550237504684[374] = 0;
   out_2148830550237504684[375] = 0;
   out_2148830550237504684[376] = 0;
   out_2148830550237504684[377] = 0;
   out_2148830550237504684[378] = 0;
   out_2148830550237504684[379] = 0;
   out_2148830550237504684[380] = 0;
   out_2148830550237504684[381] = 0;
   out_2148830550237504684[382] = 0;
   out_2148830550237504684[383] = 0;
   out_2148830550237504684[384] = 0;
   out_2148830550237504684[385] = 0;
   out_2148830550237504684[386] = 0;
   out_2148830550237504684[387] = 0;
   out_2148830550237504684[388] = 0;
   out_2148830550237504684[389] = 0;
   out_2148830550237504684[390] = 0;
   out_2148830550237504684[391] = 0;
   out_2148830550237504684[392] = 0;
   out_2148830550237504684[393] = 0;
   out_2148830550237504684[394] = 0;
   out_2148830550237504684[395] = 1.0;
   out_2148830550237504684[396] = 0;
   out_2148830550237504684[397] = 0;
   out_2148830550237504684[398] = 0;
   out_2148830550237504684[399] = 0;
   out_2148830550237504684[400] = 0;
   out_2148830550237504684[401] = 0;
   out_2148830550237504684[402] = 0;
   out_2148830550237504684[403] = 0;
   out_2148830550237504684[404] = 0;
   out_2148830550237504684[405] = 0;
   out_2148830550237504684[406] = 0;
   out_2148830550237504684[407] = 0;
   out_2148830550237504684[408] = 0;
   out_2148830550237504684[409] = 0;
   out_2148830550237504684[410] = 0;
   out_2148830550237504684[411] = 0;
   out_2148830550237504684[412] = 0;
   out_2148830550237504684[413] = 0;
   out_2148830550237504684[414] = 0;
   out_2148830550237504684[415] = 0;
   out_2148830550237504684[416] = 0;
   out_2148830550237504684[417] = 1.0;
   out_2148830550237504684[418] = 0;
   out_2148830550237504684[419] = 0;
   out_2148830550237504684[420] = 0;
   out_2148830550237504684[421] = 0;
   out_2148830550237504684[422] = 0;
   out_2148830550237504684[423] = 0;
   out_2148830550237504684[424] = 0;
   out_2148830550237504684[425] = 0;
   out_2148830550237504684[426] = 0;
   out_2148830550237504684[427] = 0;
   out_2148830550237504684[428] = 0;
   out_2148830550237504684[429] = 0;
   out_2148830550237504684[430] = 0;
   out_2148830550237504684[431] = 0;
   out_2148830550237504684[432] = 0;
   out_2148830550237504684[433] = 0;
   out_2148830550237504684[434] = 0;
   out_2148830550237504684[435] = 0;
   out_2148830550237504684[436] = 0;
   out_2148830550237504684[437] = 0;
   out_2148830550237504684[438] = 0;
   out_2148830550237504684[439] = 1.0;
   out_2148830550237504684[440] = 0;
   out_2148830550237504684[441] = 0;
   out_2148830550237504684[442] = 0;
   out_2148830550237504684[443] = 0;
   out_2148830550237504684[444] = 0;
   out_2148830550237504684[445] = 0;
   out_2148830550237504684[446] = 0;
   out_2148830550237504684[447] = 0;
   out_2148830550237504684[448] = 0;
   out_2148830550237504684[449] = 0;
   out_2148830550237504684[450] = 0;
   out_2148830550237504684[451] = 0;
   out_2148830550237504684[452] = 0;
   out_2148830550237504684[453] = 0;
   out_2148830550237504684[454] = 0;
   out_2148830550237504684[455] = 0;
   out_2148830550237504684[456] = 0;
   out_2148830550237504684[457] = 0;
   out_2148830550237504684[458] = 0;
   out_2148830550237504684[459] = 0;
   out_2148830550237504684[460] = 0;
   out_2148830550237504684[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9175569816144614590) {
   out_9175569816144614590[0] = dt*state[7] + state[0];
   out_9175569816144614590[1] = dt*state[8] + state[1];
   out_9175569816144614590[2] = dt*state[9] + state[2];
   out_9175569816144614590[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9175569816144614590[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9175569816144614590[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9175569816144614590[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9175569816144614590[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9175569816144614590[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9175569816144614590[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9175569816144614590[10] = state[10];
   out_9175569816144614590[11] = state[11];
   out_9175569816144614590[12] = state[12];
   out_9175569816144614590[13] = state[13];
   out_9175569816144614590[14] = state[14];
   out_9175569816144614590[15] = state[15];
   out_9175569816144614590[16] = state[16];
   out_9175569816144614590[17] = state[17];
   out_9175569816144614590[18] = state[18];
   out_9175569816144614590[19] = state[19];
   out_9175569816144614590[20] = state[20];
   out_9175569816144614590[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6638881892447955891) {
   out_6638881892447955891[0] = 1;
   out_6638881892447955891[1] = 0;
   out_6638881892447955891[2] = 0;
   out_6638881892447955891[3] = 0;
   out_6638881892447955891[4] = 0;
   out_6638881892447955891[5] = 0;
   out_6638881892447955891[6] = dt;
   out_6638881892447955891[7] = 0;
   out_6638881892447955891[8] = 0;
   out_6638881892447955891[9] = 0;
   out_6638881892447955891[10] = 0;
   out_6638881892447955891[11] = 0;
   out_6638881892447955891[12] = 0;
   out_6638881892447955891[13] = 0;
   out_6638881892447955891[14] = 0;
   out_6638881892447955891[15] = 0;
   out_6638881892447955891[16] = 0;
   out_6638881892447955891[17] = 0;
   out_6638881892447955891[18] = 0;
   out_6638881892447955891[19] = 0;
   out_6638881892447955891[20] = 0;
   out_6638881892447955891[21] = 0;
   out_6638881892447955891[22] = 1;
   out_6638881892447955891[23] = 0;
   out_6638881892447955891[24] = 0;
   out_6638881892447955891[25] = 0;
   out_6638881892447955891[26] = 0;
   out_6638881892447955891[27] = 0;
   out_6638881892447955891[28] = dt;
   out_6638881892447955891[29] = 0;
   out_6638881892447955891[30] = 0;
   out_6638881892447955891[31] = 0;
   out_6638881892447955891[32] = 0;
   out_6638881892447955891[33] = 0;
   out_6638881892447955891[34] = 0;
   out_6638881892447955891[35] = 0;
   out_6638881892447955891[36] = 0;
   out_6638881892447955891[37] = 0;
   out_6638881892447955891[38] = 0;
   out_6638881892447955891[39] = 0;
   out_6638881892447955891[40] = 0;
   out_6638881892447955891[41] = 0;
   out_6638881892447955891[42] = 0;
   out_6638881892447955891[43] = 0;
   out_6638881892447955891[44] = 1;
   out_6638881892447955891[45] = 0;
   out_6638881892447955891[46] = 0;
   out_6638881892447955891[47] = 0;
   out_6638881892447955891[48] = 0;
   out_6638881892447955891[49] = 0;
   out_6638881892447955891[50] = dt;
   out_6638881892447955891[51] = 0;
   out_6638881892447955891[52] = 0;
   out_6638881892447955891[53] = 0;
   out_6638881892447955891[54] = 0;
   out_6638881892447955891[55] = 0;
   out_6638881892447955891[56] = 0;
   out_6638881892447955891[57] = 0;
   out_6638881892447955891[58] = 0;
   out_6638881892447955891[59] = 0;
   out_6638881892447955891[60] = 0;
   out_6638881892447955891[61] = 0;
   out_6638881892447955891[62] = 0;
   out_6638881892447955891[63] = 0;
   out_6638881892447955891[64] = 0;
   out_6638881892447955891[65] = 0;
   out_6638881892447955891[66] = 1;
   out_6638881892447955891[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6638881892447955891[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6638881892447955891[69] = 0;
   out_6638881892447955891[70] = 0;
   out_6638881892447955891[71] = 0;
   out_6638881892447955891[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6638881892447955891[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6638881892447955891[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6638881892447955891[75] = 0;
   out_6638881892447955891[76] = 0;
   out_6638881892447955891[77] = 0;
   out_6638881892447955891[78] = 0;
   out_6638881892447955891[79] = 0;
   out_6638881892447955891[80] = 0;
   out_6638881892447955891[81] = 0;
   out_6638881892447955891[82] = 0;
   out_6638881892447955891[83] = 0;
   out_6638881892447955891[84] = 0;
   out_6638881892447955891[85] = 0;
   out_6638881892447955891[86] = 0;
   out_6638881892447955891[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6638881892447955891[88] = 1;
   out_6638881892447955891[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6638881892447955891[90] = 0;
   out_6638881892447955891[91] = 0;
   out_6638881892447955891[92] = 0;
   out_6638881892447955891[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6638881892447955891[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6638881892447955891[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6638881892447955891[96] = 0;
   out_6638881892447955891[97] = 0;
   out_6638881892447955891[98] = 0;
   out_6638881892447955891[99] = 0;
   out_6638881892447955891[100] = 0;
   out_6638881892447955891[101] = 0;
   out_6638881892447955891[102] = 0;
   out_6638881892447955891[103] = 0;
   out_6638881892447955891[104] = 0;
   out_6638881892447955891[105] = 0;
   out_6638881892447955891[106] = 0;
   out_6638881892447955891[107] = 0;
   out_6638881892447955891[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6638881892447955891[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6638881892447955891[110] = 1;
   out_6638881892447955891[111] = 0;
   out_6638881892447955891[112] = 0;
   out_6638881892447955891[113] = 0;
   out_6638881892447955891[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6638881892447955891[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6638881892447955891[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6638881892447955891[117] = 0;
   out_6638881892447955891[118] = 0;
   out_6638881892447955891[119] = 0;
   out_6638881892447955891[120] = 0;
   out_6638881892447955891[121] = 0;
   out_6638881892447955891[122] = 0;
   out_6638881892447955891[123] = 0;
   out_6638881892447955891[124] = 0;
   out_6638881892447955891[125] = 0;
   out_6638881892447955891[126] = 0;
   out_6638881892447955891[127] = 0;
   out_6638881892447955891[128] = 0;
   out_6638881892447955891[129] = 0;
   out_6638881892447955891[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6638881892447955891[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6638881892447955891[132] = 1;
   out_6638881892447955891[133] = 0;
   out_6638881892447955891[134] = 0;
   out_6638881892447955891[135] = 0;
   out_6638881892447955891[136] = 0;
   out_6638881892447955891[137] = 0;
   out_6638881892447955891[138] = 0;
   out_6638881892447955891[139] = 0;
   out_6638881892447955891[140] = 0;
   out_6638881892447955891[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6638881892447955891[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6638881892447955891[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6638881892447955891[144] = 0;
   out_6638881892447955891[145] = 0;
   out_6638881892447955891[146] = 0;
   out_6638881892447955891[147] = 0;
   out_6638881892447955891[148] = 0;
   out_6638881892447955891[149] = 0;
   out_6638881892447955891[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6638881892447955891[151] = 0;
   out_6638881892447955891[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6638881892447955891[153] = 0;
   out_6638881892447955891[154] = 1;
   out_6638881892447955891[155] = 0;
   out_6638881892447955891[156] = 0;
   out_6638881892447955891[157] = 0;
   out_6638881892447955891[158] = 0;
   out_6638881892447955891[159] = 0;
   out_6638881892447955891[160] = 0;
   out_6638881892447955891[161] = 0;
   out_6638881892447955891[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6638881892447955891[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6638881892447955891[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6638881892447955891[165] = 0;
   out_6638881892447955891[166] = 0;
   out_6638881892447955891[167] = 0;
   out_6638881892447955891[168] = 0;
   out_6638881892447955891[169] = 0;
   out_6638881892447955891[170] = 0;
   out_6638881892447955891[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6638881892447955891[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6638881892447955891[173] = 0;
   out_6638881892447955891[174] = 0;
   out_6638881892447955891[175] = 0;
   out_6638881892447955891[176] = 1;
   out_6638881892447955891[177] = 0;
   out_6638881892447955891[178] = 0;
   out_6638881892447955891[179] = 0;
   out_6638881892447955891[180] = 0;
   out_6638881892447955891[181] = 0;
   out_6638881892447955891[182] = 0;
   out_6638881892447955891[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6638881892447955891[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6638881892447955891[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6638881892447955891[186] = 0;
   out_6638881892447955891[187] = 0;
   out_6638881892447955891[188] = 0;
   out_6638881892447955891[189] = 0;
   out_6638881892447955891[190] = 0;
   out_6638881892447955891[191] = 0;
   out_6638881892447955891[192] = 0;
   out_6638881892447955891[193] = 0;
   out_6638881892447955891[194] = 0;
   out_6638881892447955891[195] = 0;
   out_6638881892447955891[196] = 0;
   out_6638881892447955891[197] = 0;
   out_6638881892447955891[198] = 1;
   out_6638881892447955891[199] = 0;
   out_6638881892447955891[200] = 0;
   out_6638881892447955891[201] = 0;
   out_6638881892447955891[202] = 0;
   out_6638881892447955891[203] = 0;
   out_6638881892447955891[204] = 0;
   out_6638881892447955891[205] = 0;
   out_6638881892447955891[206] = 0;
   out_6638881892447955891[207] = 0;
   out_6638881892447955891[208] = 0;
   out_6638881892447955891[209] = 0;
   out_6638881892447955891[210] = 0;
   out_6638881892447955891[211] = 0;
   out_6638881892447955891[212] = 0;
   out_6638881892447955891[213] = 0;
   out_6638881892447955891[214] = 0;
   out_6638881892447955891[215] = 0;
   out_6638881892447955891[216] = 0;
   out_6638881892447955891[217] = 0;
   out_6638881892447955891[218] = 0;
   out_6638881892447955891[219] = 0;
   out_6638881892447955891[220] = 1;
   out_6638881892447955891[221] = 0;
   out_6638881892447955891[222] = 0;
   out_6638881892447955891[223] = 0;
   out_6638881892447955891[224] = 0;
   out_6638881892447955891[225] = 0;
   out_6638881892447955891[226] = 0;
   out_6638881892447955891[227] = 0;
   out_6638881892447955891[228] = 0;
   out_6638881892447955891[229] = 0;
   out_6638881892447955891[230] = 0;
   out_6638881892447955891[231] = 0;
   out_6638881892447955891[232] = 0;
   out_6638881892447955891[233] = 0;
   out_6638881892447955891[234] = 0;
   out_6638881892447955891[235] = 0;
   out_6638881892447955891[236] = 0;
   out_6638881892447955891[237] = 0;
   out_6638881892447955891[238] = 0;
   out_6638881892447955891[239] = 0;
   out_6638881892447955891[240] = 0;
   out_6638881892447955891[241] = 0;
   out_6638881892447955891[242] = 1;
   out_6638881892447955891[243] = 0;
   out_6638881892447955891[244] = 0;
   out_6638881892447955891[245] = 0;
   out_6638881892447955891[246] = 0;
   out_6638881892447955891[247] = 0;
   out_6638881892447955891[248] = 0;
   out_6638881892447955891[249] = 0;
   out_6638881892447955891[250] = 0;
   out_6638881892447955891[251] = 0;
   out_6638881892447955891[252] = 0;
   out_6638881892447955891[253] = 0;
   out_6638881892447955891[254] = 0;
   out_6638881892447955891[255] = 0;
   out_6638881892447955891[256] = 0;
   out_6638881892447955891[257] = 0;
   out_6638881892447955891[258] = 0;
   out_6638881892447955891[259] = 0;
   out_6638881892447955891[260] = 0;
   out_6638881892447955891[261] = 0;
   out_6638881892447955891[262] = 0;
   out_6638881892447955891[263] = 0;
   out_6638881892447955891[264] = 1;
   out_6638881892447955891[265] = 0;
   out_6638881892447955891[266] = 0;
   out_6638881892447955891[267] = 0;
   out_6638881892447955891[268] = 0;
   out_6638881892447955891[269] = 0;
   out_6638881892447955891[270] = 0;
   out_6638881892447955891[271] = 0;
   out_6638881892447955891[272] = 0;
   out_6638881892447955891[273] = 0;
   out_6638881892447955891[274] = 0;
   out_6638881892447955891[275] = 0;
   out_6638881892447955891[276] = 0;
   out_6638881892447955891[277] = 0;
   out_6638881892447955891[278] = 0;
   out_6638881892447955891[279] = 0;
   out_6638881892447955891[280] = 0;
   out_6638881892447955891[281] = 0;
   out_6638881892447955891[282] = 0;
   out_6638881892447955891[283] = 0;
   out_6638881892447955891[284] = 0;
   out_6638881892447955891[285] = 0;
   out_6638881892447955891[286] = 1;
   out_6638881892447955891[287] = 0;
   out_6638881892447955891[288] = 0;
   out_6638881892447955891[289] = 0;
   out_6638881892447955891[290] = 0;
   out_6638881892447955891[291] = 0;
   out_6638881892447955891[292] = 0;
   out_6638881892447955891[293] = 0;
   out_6638881892447955891[294] = 0;
   out_6638881892447955891[295] = 0;
   out_6638881892447955891[296] = 0;
   out_6638881892447955891[297] = 0;
   out_6638881892447955891[298] = 0;
   out_6638881892447955891[299] = 0;
   out_6638881892447955891[300] = 0;
   out_6638881892447955891[301] = 0;
   out_6638881892447955891[302] = 0;
   out_6638881892447955891[303] = 0;
   out_6638881892447955891[304] = 0;
   out_6638881892447955891[305] = 0;
   out_6638881892447955891[306] = 0;
   out_6638881892447955891[307] = 0;
   out_6638881892447955891[308] = 1;
   out_6638881892447955891[309] = 0;
   out_6638881892447955891[310] = 0;
   out_6638881892447955891[311] = 0;
   out_6638881892447955891[312] = 0;
   out_6638881892447955891[313] = 0;
   out_6638881892447955891[314] = 0;
   out_6638881892447955891[315] = 0;
   out_6638881892447955891[316] = 0;
   out_6638881892447955891[317] = 0;
   out_6638881892447955891[318] = 0;
   out_6638881892447955891[319] = 0;
   out_6638881892447955891[320] = 0;
   out_6638881892447955891[321] = 0;
   out_6638881892447955891[322] = 0;
   out_6638881892447955891[323] = 0;
   out_6638881892447955891[324] = 0;
   out_6638881892447955891[325] = 0;
   out_6638881892447955891[326] = 0;
   out_6638881892447955891[327] = 0;
   out_6638881892447955891[328] = 0;
   out_6638881892447955891[329] = 0;
   out_6638881892447955891[330] = 1;
   out_6638881892447955891[331] = 0;
   out_6638881892447955891[332] = 0;
   out_6638881892447955891[333] = 0;
   out_6638881892447955891[334] = 0;
   out_6638881892447955891[335] = 0;
   out_6638881892447955891[336] = 0;
   out_6638881892447955891[337] = 0;
   out_6638881892447955891[338] = 0;
   out_6638881892447955891[339] = 0;
   out_6638881892447955891[340] = 0;
   out_6638881892447955891[341] = 0;
   out_6638881892447955891[342] = 0;
   out_6638881892447955891[343] = 0;
   out_6638881892447955891[344] = 0;
   out_6638881892447955891[345] = 0;
   out_6638881892447955891[346] = 0;
   out_6638881892447955891[347] = 0;
   out_6638881892447955891[348] = 0;
   out_6638881892447955891[349] = 0;
   out_6638881892447955891[350] = 0;
   out_6638881892447955891[351] = 0;
   out_6638881892447955891[352] = 1;
   out_6638881892447955891[353] = 0;
   out_6638881892447955891[354] = 0;
   out_6638881892447955891[355] = 0;
   out_6638881892447955891[356] = 0;
   out_6638881892447955891[357] = 0;
   out_6638881892447955891[358] = 0;
   out_6638881892447955891[359] = 0;
   out_6638881892447955891[360] = 0;
   out_6638881892447955891[361] = 0;
   out_6638881892447955891[362] = 0;
   out_6638881892447955891[363] = 0;
   out_6638881892447955891[364] = 0;
   out_6638881892447955891[365] = 0;
   out_6638881892447955891[366] = 0;
   out_6638881892447955891[367] = 0;
   out_6638881892447955891[368] = 0;
   out_6638881892447955891[369] = 0;
   out_6638881892447955891[370] = 0;
   out_6638881892447955891[371] = 0;
   out_6638881892447955891[372] = 0;
   out_6638881892447955891[373] = 0;
   out_6638881892447955891[374] = 1;
   out_6638881892447955891[375] = 0;
   out_6638881892447955891[376] = 0;
   out_6638881892447955891[377] = 0;
   out_6638881892447955891[378] = 0;
   out_6638881892447955891[379] = 0;
   out_6638881892447955891[380] = 0;
   out_6638881892447955891[381] = 0;
   out_6638881892447955891[382] = 0;
   out_6638881892447955891[383] = 0;
   out_6638881892447955891[384] = 0;
   out_6638881892447955891[385] = 0;
   out_6638881892447955891[386] = 0;
   out_6638881892447955891[387] = 0;
   out_6638881892447955891[388] = 0;
   out_6638881892447955891[389] = 0;
   out_6638881892447955891[390] = 0;
   out_6638881892447955891[391] = 0;
   out_6638881892447955891[392] = 0;
   out_6638881892447955891[393] = 0;
   out_6638881892447955891[394] = 0;
   out_6638881892447955891[395] = 0;
   out_6638881892447955891[396] = 1;
   out_6638881892447955891[397] = 0;
   out_6638881892447955891[398] = 0;
   out_6638881892447955891[399] = 0;
   out_6638881892447955891[400] = 0;
   out_6638881892447955891[401] = 0;
   out_6638881892447955891[402] = 0;
   out_6638881892447955891[403] = 0;
   out_6638881892447955891[404] = 0;
   out_6638881892447955891[405] = 0;
   out_6638881892447955891[406] = 0;
   out_6638881892447955891[407] = 0;
   out_6638881892447955891[408] = 0;
   out_6638881892447955891[409] = 0;
   out_6638881892447955891[410] = 0;
   out_6638881892447955891[411] = 0;
   out_6638881892447955891[412] = 0;
   out_6638881892447955891[413] = 0;
   out_6638881892447955891[414] = 0;
   out_6638881892447955891[415] = 0;
   out_6638881892447955891[416] = 0;
   out_6638881892447955891[417] = 0;
   out_6638881892447955891[418] = 1;
   out_6638881892447955891[419] = 0;
   out_6638881892447955891[420] = 0;
   out_6638881892447955891[421] = 0;
   out_6638881892447955891[422] = 0;
   out_6638881892447955891[423] = 0;
   out_6638881892447955891[424] = 0;
   out_6638881892447955891[425] = 0;
   out_6638881892447955891[426] = 0;
   out_6638881892447955891[427] = 0;
   out_6638881892447955891[428] = 0;
   out_6638881892447955891[429] = 0;
   out_6638881892447955891[430] = 0;
   out_6638881892447955891[431] = 0;
   out_6638881892447955891[432] = 0;
   out_6638881892447955891[433] = 0;
   out_6638881892447955891[434] = 0;
   out_6638881892447955891[435] = 0;
   out_6638881892447955891[436] = 0;
   out_6638881892447955891[437] = 0;
   out_6638881892447955891[438] = 0;
   out_6638881892447955891[439] = 0;
   out_6638881892447955891[440] = 1;
}
void h_4(double *state, double *unused, double *out_4748581981128319294) {
   out_4748581981128319294[0] = state[10] + state[13];
   out_4748581981128319294[1] = state[11] + state[14];
   out_4748581981128319294[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8350786998460166632) {
   out_8350786998460166632[0] = 0;
   out_8350786998460166632[1] = 0;
   out_8350786998460166632[2] = 0;
   out_8350786998460166632[3] = 0;
   out_8350786998460166632[4] = 0;
   out_8350786998460166632[5] = 0;
   out_8350786998460166632[6] = 0;
   out_8350786998460166632[7] = 0;
   out_8350786998460166632[8] = 0;
   out_8350786998460166632[9] = 0;
   out_8350786998460166632[10] = 1;
   out_8350786998460166632[11] = 0;
   out_8350786998460166632[12] = 0;
   out_8350786998460166632[13] = 1;
   out_8350786998460166632[14] = 0;
   out_8350786998460166632[15] = 0;
   out_8350786998460166632[16] = 0;
   out_8350786998460166632[17] = 0;
   out_8350786998460166632[18] = 0;
   out_8350786998460166632[19] = 0;
   out_8350786998460166632[20] = 0;
   out_8350786998460166632[21] = 0;
   out_8350786998460166632[22] = 0;
   out_8350786998460166632[23] = 0;
   out_8350786998460166632[24] = 0;
   out_8350786998460166632[25] = 0;
   out_8350786998460166632[26] = 0;
   out_8350786998460166632[27] = 0;
   out_8350786998460166632[28] = 0;
   out_8350786998460166632[29] = 0;
   out_8350786998460166632[30] = 0;
   out_8350786998460166632[31] = 0;
   out_8350786998460166632[32] = 0;
   out_8350786998460166632[33] = 1;
   out_8350786998460166632[34] = 0;
   out_8350786998460166632[35] = 0;
   out_8350786998460166632[36] = 1;
   out_8350786998460166632[37] = 0;
   out_8350786998460166632[38] = 0;
   out_8350786998460166632[39] = 0;
   out_8350786998460166632[40] = 0;
   out_8350786998460166632[41] = 0;
   out_8350786998460166632[42] = 0;
   out_8350786998460166632[43] = 0;
   out_8350786998460166632[44] = 0;
   out_8350786998460166632[45] = 0;
   out_8350786998460166632[46] = 0;
   out_8350786998460166632[47] = 0;
   out_8350786998460166632[48] = 0;
   out_8350786998460166632[49] = 0;
   out_8350786998460166632[50] = 0;
   out_8350786998460166632[51] = 0;
   out_8350786998460166632[52] = 0;
   out_8350786998460166632[53] = 0;
   out_8350786998460166632[54] = 0;
   out_8350786998460166632[55] = 0;
   out_8350786998460166632[56] = 1;
   out_8350786998460166632[57] = 0;
   out_8350786998460166632[58] = 0;
   out_8350786998460166632[59] = 1;
   out_8350786998460166632[60] = 0;
   out_8350786998460166632[61] = 0;
   out_8350786998460166632[62] = 0;
   out_8350786998460166632[63] = 0;
   out_8350786998460166632[64] = 0;
   out_8350786998460166632[65] = 0;
}
void h_9(double *state, double *unused, double *out_3299619827359850763) {
   out_3299619827359850763[0] = state[10];
   out_3299619827359850763[1] = state[11];
   out_3299619827359850763[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2808738139984937514) {
   out_2808738139984937514[0] = 0;
   out_2808738139984937514[1] = 0;
   out_2808738139984937514[2] = 0;
   out_2808738139984937514[3] = 0;
   out_2808738139984937514[4] = 0;
   out_2808738139984937514[5] = 0;
   out_2808738139984937514[6] = 0;
   out_2808738139984937514[7] = 0;
   out_2808738139984937514[8] = 0;
   out_2808738139984937514[9] = 0;
   out_2808738139984937514[10] = 1;
   out_2808738139984937514[11] = 0;
   out_2808738139984937514[12] = 0;
   out_2808738139984937514[13] = 0;
   out_2808738139984937514[14] = 0;
   out_2808738139984937514[15] = 0;
   out_2808738139984937514[16] = 0;
   out_2808738139984937514[17] = 0;
   out_2808738139984937514[18] = 0;
   out_2808738139984937514[19] = 0;
   out_2808738139984937514[20] = 0;
   out_2808738139984937514[21] = 0;
   out_2808738139984937514[22] = 0;
   out_2808738139984937514[23] = 0;
   out_2808738139984937514[24] = 0;
   out_2808738139984937514[25] = 0;
   out_2808738139984937514[26] = 0;
   out_2808738139984937514[27] = 0;
   out_2808738139984937514[28] = 0;
   out_2808738139984937514[29] = 0;
   out_2808738139984937514[30] = 0;
   out_2808738139984937514[31] = 0;
   out_2808738139984937514[32] = 0;
   out_2808738139984937514[33] = 1;
   out_2808738139984937514[34] = 0;
   out_2808738139984937514[35] = 0;
   out_2808738139984937514[36] = 0;
   out_2808738139984937514[37] = 0;
   out_2808738139984937514[38] = 0;
   out_2808738139984937514[39] = 0;
   out_2808738139984937514[40] = 0;
   out_2808738139984937514[41] = 0;
   out_2808738139984937514[42] = 0;
   out_2808738139984937514[43] = 0;
   out_2808738139984937514[44] = 0;
   out_2808738139984937514[45] = 0;
   out_2808738139984937514[46] = 0;
   out_2808738139984937514[47] = 0;
   out_2808738139984937514[48] = 0;
   out_2808738139984937514[49] = 0;
   out_2808738139984937514[50] = 0;
   out_2808738139984937514[51] = 0;
   out_2808738139984937514[52] = 0;
   out_2808738139984937514[53] = 0;
   out_2808738139984937514[54] = 0;
   out_2808738139984937514[55] = 0;
   out_2808738139984937514[56] = 1;
   out_2808738139984937514[57] = 0;
   out_2808738139984937514[58] = 0;
   out_2808738139984937514[59] = 0;
   out_2808738139984937514[60] = 0;
   out_2808738139984937514[61] = 0;
   out_2808738139984937514[62] = 0;
   out_2808738139984937514[63] = 0;
   out_2808738139984937514[64] = 0;
   out_2808738139984937514[65] = 0;
}
void h_10(double *state, double *unused, double *out_6759185635745913961) {
   out_6759185635745913961[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6759185635745913961[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6759185635745913961[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8931560196458308531) {
   out_8931560196458308531[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8931560196458308531[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8931560196458308531[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8931560196458308531[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8931560196458308531[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8931560196458308531[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8931560196458308531[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8931560196458308531[7] = 0;
   out_8931560196458308531[8] = 0;
   out_8931560196458308531[9] = 0;
   out_8931560196458308531[10] = 0;
   out_8931560196458308531[11] = 0;
   out_8931560196458308531[12] = 0;
   out_8931560196458308531[13] = 0;
   out_8931560196458308531[14] = 0;
   out_8931560196458308531[15] = 0;
   out_8931560196458308531[16] = 1;
   out_8931560196458308531[17] = 0;
   out_8931560196458308531[18] = 0;
   out_8931560196458308531[19] = 1;
   out_8931560196458308531[20] = 0;
   out_8931560196458308531[21] = 0;
   out_8931560196458308531[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8931560196458308531[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8931560196458308531[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8931560196458308531[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8931560196458308531[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8931560196458308531[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8931560196458308531[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8931560196458308531[29] = 0;
   out_8931560196458308531[30] = 0;
   out_8931560196458308531[31] = 0;
   out_8931560196458308531[32] = 0;
   out_8931560196458308531[33] = 0;
   out_8931560196458308531[34] = 0;
   out_8931560196458308531[35] = 0;
   out_8931560196458308531[36] = 0;
   out_8931560196458308531[37] = 0;
   out_8931560196458308531[38] = 0;
   out_8931560196458308531[39] = 1;
   out_8931560196458308531[40] = 0;
   out_8931560196458308531[41] = 0;
   out_8931560196458308531[42] = 1;
   out_8931560196458308531[43] = 0;
   out_8931560196458308531[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8931560196458308531[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8931560196458308531[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8931560196458308531[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8931560196458308531[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8931560196458308531[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8931560196458308531[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8931560196458308531[51] = 0;
   out_8931560196458308531[52] = 0;
   out_8931560196458308531[53] = 0;
   out_8931560196458308531[54] = 0;
   out_8931560196458308531[55] = 0;
   out_8931560196458308531[56] = 0;
   out_8931560196458308531[57] = 0;
   out_8931560196458308531[58] = 0;
   out_8931560196458308531[59] = 0;
   out_8931560196458308531[60] = 0;
   out_8931560196458308531[61] = 0;
   out_8931560196458308531[62] = 1;
   out_8931560196458308531[63] = 0;
   out_8931560196458308531[64] = 0;
   out_8931560196458308531[65] = 1;
}
void h_12(double *state, double *unused, double *out_3977376211679548972) {
   out_3977376211679548972[0] = state[0];
   out_3977376211679548972[1] = state[1];
   out_3977376211679548972[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8971886023507760299) {
   out_8971886023507760299[0] = 1;
   out_8971886023507760299[1] = 0;
   out_8971886023507760299[2] = 0;
   out_8971886023507760299[3] = 0;
   out_8971886023507760299[4] = 0;
   out_8971886023507760299[5] = 0;
   out_8971886023507760299[6] = 0;
   out_8971886023507760299[7] = 0;
   out_8971886023507760299[8] = 0;
   out_8971886023507760299[9] = 0;
   out_8971886023507760299[10] = 0;
   out_8971886023507760299[11] = 0;
   out_8971886023507760299[12] = 0;
   out_8971886023507760299[13] = 0;
   out_8971886023507760299[14] = 0;
   out_8971886023507760299[15] = 0;
   out_8971886023507760299[16] = 0;
   out_8971886023507760299[17] = 0;
   out_8971886023507760299[18] = 0;
   out_8971886023507760299[19] = 0;
   out_8971886023507760299[20] = 0;
   out_8971886023507760299[21] = 0;
   out_8971886023507760299[22] = 0;
   out_8971886023507760299[23] = 1;
   out_8971886023507760299[24] = 0;
   out_8971886023507760299[25] = 0;
   out_8971886023507760299[26] = 0;
   out_8971886023507760299[27] = 0;
   out_8971886023507760299[28] = 0;
   out_8971886023507760299[29] = 0;
   out_8971886023507760299[30] = 0;
   out_8971886023507760299[31] = 0;
   out_8971886023507760299[32] = 0;
   out_8971886023507760299[33] = 0;
   out_8971886023507760299[34] = 0;
   out_8971886023507760299[35] = 0;
   out_8971886023507760299[36] = 0;
   out_8971886023507760299[37] = 0;
   out_8971886023507760299[38] = 0;
   out_8971886023507760299[39] = 0;
   out_8971886023507760299[40] = 0;
   out_8971886023507760299[41] = 0;
   out_8971886023507760299[42] = 0;
   out_8971886023507760299[43] = 0;
   out_8971886023507760299[44] = 0;
   out_8971886023507760299[45] = 0;
   out_8971886023507760299[46] = 1;
   out_8971886023507760299[47] = 0;
   out_8971886023507760299[48] = 0;
   out_8971886023507760299[49] = 0;
   out_8971886023507760299[50] = 0;
   out_8971886023507760299[51] = 0;
   out_8971886023507760299[52] = 0;
   out_8971886023507760299[53] = 0;
   out_8971886023507760299[54] = 0;
   out_8971886023507760299[55] = 0;
   out_8971886023507760299[56] = 0;
   out_8971886023507760299[57] = 0;
   out_8971886023507760299[58] = 0;
   out_8971886023507760299[59] = 0;
   out_8971886023507760299[60] = 0;
   out_8971886023507760299[61] = 0;
   out_8971886023507760299[62] = 0;
   out_8971886023507760299[63] = 0;
   out_8971886023507760299[64] = 0;
   out_8971886023507760299[65] = 0;
}
void h_35(double *state, double *unused, double *out_6053256877303408526) {
   out_6053256877303408526[0] = state[7];
   out_6053256877303408526[1] = state[8];
   out_6053256877303408526[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6729295017876777608) {
   out_6729295017876777608[0] = 0;
   out_6729295017876777608[1] = 0;
   out_6729295017876777608[2] = 0;
   out_6729295017876777608[3] = 0;
   out_6729295017876777608[4] = 0;
   out_6729295017876777608[5] = 0;
   out_6729295017876777608[6] = 0;
   out_6729295017876777608[7] = 1;
   out_6729295017876777608[8] = 0;
   out_6729295017876777608[9] = 0;
   out_6729295017876777608[10] = 0;
   out_6729295017876777608[11] = 0;
   out_6729295017876777608[12] = 0;
   out_6729295017876777608[13] = 0;
   out_6729295017876777608[14] = 0;
   out_6729295017876777608[15] = 0;
   out_6729295017876777608[16] = 0;
   out_6729295017876777608[17] = 0;
   out_6729295017876777608[18] = 0;
   out_6729295017876777608[19] = 0;
   out_6729295017876777608[20] = 0;
   out_6729295017876777608[21] = 0;
   out_6729295017876777608[22] = 0;
   out_6729295017876777608[23] = 0;
   out_6729295017876777608[24] = 0;
   out_6729295017876777608[25] = 0;
   out_6729295017876777608[26] = 0;
   out_6729295017876777608[27] = 0;
   out_6729295017876777608[28] = 0;
   out_6729295017876777608[29] = 0;
   out_6729295017876777608[30] = 1;
   out_6729295017876777608[31] = 0;
   out_6729295017876777608[32] = 0;
   out_6729295017876777608[33] = 0;
   out_6729295017876777608[34] = 0;
   out_6729295017876777608[35] = 0;
   out_6729295017876777608[36] = 0;
   out_6729295017876777608[37] = 0;
   out_6729295017876777608[38] = 0;
   out_6729295017876777608[39] = 0;
   out_6729295017876777608[40] = 0;
   out_6729295017876777608[41] = 0;
   out_6729295017876777608[42] = 0;
   out_6729295017876777608[43] = 0;
   out_6729295017876777608[44] = 0;
   out_6729295017876777608[45] = 0;
   out_6729295017876777608[46] = 0;
   out_6729295017876777608[47] = 0;
   out_6729295017876777608[48] = 0;
   out_6729295017876777608[49] = 0;
   out_6729295017876777608[50] = 0;
   out_6729295017876777608[51] = 0;
   out_6729295017876777608[52] = 0;
   out_6729295017876777608[53] = 1;
   out_6729295017876777608[54] = 0;
   out_6729295017876777608[55] = 0;
   out_6729295017876777608[56] = 0;
   out_6729295017876777608[57] = 0;
   out_6729295017876777608[58] = 0;
   out_6729295017876777608[59] = 0;
   out_6729295017876777608[60] = 0;
   out_6729295017876777608[61] = 0;
   out_6729295017876777608[62] = 0;
   out_6729295017876777608[63] = 0;
   out_6729295017876777608[64] = 0;
   out_6729295017876777608[65] = 0;
}
void h_32(double *state, double *unused, double *out_8660421758678747156) {
   out_8660421758678747156[0] = state[3];
   out_8660421758678747156[1] = state[4];
   out_8660421758678747156[2] = state[5];
   out_8660421758678747156[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6598130232936037139) {
   out_6598130232936037139[0] = 0;
   out_6598130232936037139[1] = 0;
   out_6598130232936037139[2] = 0;
   out_6598130232936037139[3] = 1;
   out_6598130232936037139[4] = 0;
   out_6598130232936037139[5] = 0;
   out_6598130232936037139[6] = 0;
   out_6598130232936037139[7] = 0;
   out_6598130232936037139[8] = 0;
   out_6598130232936037139[9] = 0;
   out_6598130232936037139[10] = 0;
   out_6598130232936037139[11] = 0;
   out_6598130232936037139[12] = 0;
   out_6598130232936037139[13] = 0;
   out_6598130232936037139[14] = 0;
   out_6598130232936037139[15] = 0;
   out_6598130232936037139[16] = 0;
   out_6598130232936037139[17] = 0;
   out_6598130232936037139[18] = 0;
   out_6598130232936037139[19] = 0;
   out_6598130232936037139[20] = 0;
   out_6598130232936037139[21] = 0;
   out_6598130232936037139[22] = 0;
   out_6598130232936037139[23] = 0;
   out_6598130232936037139[24] = 0;
   out_6598130232936037139[25] = 0;
   out_6598130232936037139[26] = 1;
   out_6598130232936037139[27] = 0;
   out_6598130232936037139[28] = 0;
   out_6598130232936037139[29] = 0;
   out_6598130232936037139[30] = 0;
   out_6598130232936037139[31] = 0;
   out_6598130232936037139[32] = 0;
   out_6598130232936037139[33] = 0;
   out_6598130232936037139[34] = 0;
   out_6598130232936037139[35] = 0;
   out_6598130232936037139[36] = 0;
   out_6598130232936037139[37] = 0;
   out_6598130232936037139[38] = 0;
   out_6598130232936037139[39] = 0;
   out_6598130232936037139[40] = 0;
   out_6598130232936037139[41] = 0;
   out_6598130232936037139[42] = 0;
   out_6598130232936037139[43] = 0;
   out_6598130232936037139[44] = 0;
   out_6598130232936037139[45] = 0;
   out_6598130232936037139[46] = 0;
   out_6598130232936037139[47] = 0;
   out_6598130232936037139[48] = 0;
   out_6598130232936037139[49] = 1;
   out_6598130232936037139[50] = 0;
   out_6598130232936037139[51] = 0;
   out_6598130232936037139[52] = 0;
   out_6598130232936037139[53] = 0;
   out_6598130232936037139[54] = 0;
   out_6598130232936037139[55] = 0;
   out_6598130232936037139[56] = 0;
   out_6598130232936037139[57] = 0;
   out_6598130232936037139[58] = 0;
   out_6598130232936037139[59] = 0;
   out_6598130232936037139[60] = 0;
   out_6598130232936037139[61] = 0;
   out_6598130232936037139[62] = 0;
   out_6598130232936037139[63] = 0;
   out_6598130232936037139[64] = 0;
   out_6598130232936037139[65] = 0;
   out_6598130232936037139[66] = 0;
   out_6598130232936037139[67] = 0;
   out_6598130232936037139[68] = 0;
   out_6598130232936037139[69] = 0;
   out_6598130232936037139[70] = 0;
   out_6598130232936037139[71] = 0;
   out_6598130232936037139[72] = 1;
   out_6598130232936037139[73] = 0;
   out_6598130232936037139[74] = 0;
   out_6598130232936037139[75] = 0;
   out_6598130232936037139[76] = 0;
   out_6598130232936037139[77] = 0;
   out_6598130232936037139[78] = 0;
   out_6598130232936037139[79] = 0;
   out_6598130232936037139[80] = 0;
   out_6598130232936037139[81] = 0;
   out_6598130232936037139[82] = 0;
   out_6598130232936037139[83] = 0;
   out_6598130232936037139[84] = 0;
   out_6598130232936037139[85] = 0;
   out_6598130232936037139[86] = 0;
   out_6598130232936037139[87] = 0;
}
void h_13(double *state, double *unused, double *out_1407584935076879677) {
   out_1407584935076879677[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1407584935076879677[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1407584935076879677[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2297943131464073829) {
   out_2297943131464073829[0] = 0;
   out_2297943131464073829[1] = 0;
   out_2297943131464073829[2] = 0;
   out_2297943131464073829[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2297943131464073829[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2297943131464073829[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2297943131464073829[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2297943131464073829[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2297943131464073829[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2297943131464073829[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2297943131464073829[10] = 0;
   out_2297943131464073829[11] = 0;
   out_2297943131464073829[12] = 0;
   out_2297943131464073829[13] = 0;
   out_2297943131464073829[14] = 0;
   out_2297943131464073829[15] = 0;
   out_2297943131464073829[16] = 0;
   out_2297943131464073829[17] = 0;
   out_2297943131464073829[18] = 0;
   out_2297943131464073829[19] = 0;
   out_2297943131464073829[20] = 0;
   out_2297943131464073829[21] = 0;
   out_2297943131464073829[22] = 0;
   out_2297943131464073829[23] = 0;
   out_2297943131464073829[24] = 0;
   out_2297943131464073829[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2297943131464073829[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2297943131464073829[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2297943131464073829[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2297943131464073829[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2297943131464073829[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2297943131464073829[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2297943131464073829[32] = 0;
   out_2297943131464073829[33] = 0;
   out_2297943131464073829[34] = 0;
   out_2297943131464073829[35] = 0;
   out_2297943131464073829[36] = 0;
   out_2297943131464073829[37] = 0;
   out_2297943131464073829[38] = 0;
   out_2297943131464073829[39] = 0;
   out_2297943131464073829[40] = 0;
   out_2297943131464073829[41] = 0;
   out_2297943131464073829[42] = 0;
   out_2297943131464073829[43] = 0;
   out_2297943131464073829[44] = 0;
   out_2297943131464073829[45] = 0;
   out_2297943131464073829[46] = 0;
   out_2297943131464073829[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2297943131464073829[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2297943131464073829[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2297943131464073829[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2297943131464073829[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2297943131464073829[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2297943131464073829[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2297943131464073829[54] = 0;
   out_2297943131464073829[55] = 0;
   out_2297943131464073829[56] = 0;
   out_2297943131464073829[57] = 0;
   out_2297943131464073829[58] = 0;
   out_2297943131464073829[59] = 0;
   out_2297943131464073829[60] = 0;
   out_2297943131464073829[61] = 0;
   out_2297943131464073829[62] = 0;
   out_2297943131464073829[63] = 0;
   out_2297943131464073829[64] = 0;
   out_2297943131464073829[65] = 0;
}
void h_14(double *state, double *unused, double *out_3299619827359850763) {
   out_3299619827359850763[0] = state[10];
   out_3299619827359850763[1] = state[11];
   out_3299619827359850763[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2808738139984937514) {
   out_2808738139984937514[0] = 0;
   out_2808738139984937514[1] = 0;
   out_2808738139984937514[2] = 0;
   out_2808738139984937514[3] = 0;
   out_2808738139984937514[4] = 0;
   out_2808738139984937514[5] = 0;
   out_2808738139984937514[6] = 0;
   out_2808738139984937514[7] = 0;
   out_2808738139984937514[8] = 0;
   out_2808738139984937514[9] = 0;
   out_2808738139984937514[10] = 1;
   out_2808738139984937514[11] = 0;
   out_2808738139984937514[12] = 0;
   out_2808738139984937514[13] = 0;
   out_2808738139984937514[14] = 0;
   out_2808738139984937514[15] = 0;
   out_2808738139984937514[16] = 0;
   out_2808738139984937514[17] = 0;
   out_2808738139984937514[18] = 0;
   out_2808738139984937514[19] = 0;
   out_2808738139984937514[20] = 0;
   out_2808738139984937514[21] = 0;
   out_2808738139984937514[22] = 0;
   out_2808738139984937514[23] = 0;
   out_2808738139984937514[24] = 0;
   out_2808738139984937514[25] = 0;
   out_2808738139984937514[26] = 0;
   out_2808738139984937514[27] = 0;
   out_2808738139984937514[28] = 0;
   out_2808738139984937514[29] = 0;
   out_2808738139984937514[30] = 0;
   out_2808738139984937514[31] = 0;
   out_2808738139984937514[32] = 0;
   out_2808738139984937514[33] = 1;
   out_2808738139984937514[34] = 0;
   out_2808738139984937514[35] = 0;
   out_2808738139984937514[36] = 0;
   out_2808738139984937514[37] = 0;
   out_2808738139984937514[38] = 0;
   out_2808738139984937514[39] = 0;
   out_2808738139984937514[40] = 0;
   out_2808738139984937514[41] = 0;
   out_2808738139984937514[42] = 0;
   out_2808738139984937514[43] = 0;
   out_2808738139984937514[44] = 0;
   out_2808738139984937514[45] = 0;
   out_2808738139984937514[46] = 0;
   out_2808738139984937514[47] = 0;
   out_2808738139984937514[48] = 0;
   out_2808738139984937514[49] = 0;
   out_2808738139984937514[50] = 0;
   out_2808738139984937514[51] = 0;
   out_2808738139984937514[52] = 0;
   out_2808738139984937514[53] = 0;
   out_2808738139984937514[54] = 0;
   out_2808738139984937514[55] = 0;
   out_2808738139984937514[56] = 1;
   out_2808738139984937514[57] = 0;
   out_2808738139984937514[58] = 0;
   out_2808738139984937514[59] = 0;
   out_2808738139984937514[60] = 0;
   out_2808738139984937514[61] = 0;
   out_2808738139984937514[62] = 0;
   out_2808738139984937514[63] = 0;
   out_2808738139984937514[64] = 0;
   out_2808738139984937514[65] = 0;
}
void h_33(double *state, double *unused, double *out_2880611375828088826) {
   out_2880611375828088826[0] = state[16];
   out_2880611375828088826[1] = state[17];
   out_2880611375828088826[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3578738013237920004) {
   out_3578738013237920004[0] = 0;
   out_3578738013237920004[1] = 0;
   out_3578738013237920004[2] = 0;
   out_3578738013237920004[3] = 0;
   out_3578738013237920004[4] = 0;
   out_3578738013237920004[5] = 0;
   out_3578738013237920004[6] = 0;
   out_3578738013237920004[7] = 0;
   out_3578738013237920004[8] = 0;
   out_3578738013237920004[9] = 0;
   out_3578738013237920004[10] = 0;
   out_3578738013237920004[11] = 0;
   out_3578738013237920004[12] = 0;
   out_3578738013237920004[13] = 0;
   out_3578738013237920004[14] = 0;
   out_3578738013237920004[15] = 0;
   out_3578738013237920004[16] = 1;
   out_3578738013237920004[17] = 0;
   out_3578738013237920004[18] = 0;
   out_3578738013237920004[19] = 0;
   out_3578738013237920004[20] = 0;
   out_3578738013237920004[21] = 0;
   out_3578738013237920004[22] = 0;
   out_3578738013237920004[23] = 0;
   out_3578738013237920004[24] = 0;
   out_3578738013237920004[25] = 0;
   out_3578738013237920004[26] = 0;
   out_3578738013237920004[27] = 0;
   out_3578738013237920004[28] = 0;
   out_3578738013237920004[29] = 0;
   out_3578738013237920004[30] = 0;
   out_3578738013237920004[31] = 0;
   out_3578738013237920004[32] = 0;
   out_3578738013237920004[33] = 0;
   out_3578738013237920004[34] = 0;
   out_3578738013237920004[35] = 0;
   out_3578738013237920004[36] = 0;
   out_3578738013237920004[37] = 0;
   out_3578738013237920004[38] = 0;
   out_3578738013237920004[39] = 1;
   out_3578738013237920004[40] = 0;
   out_3578738013237920004[41] = 0;
   out_3578738013237920004[42] = 0;
   out_3578738013237920004[43] = 0;
   out_3578738013237920004[44] = 0;
   out_3578738013237920004[45] = 0;
   out_3578738013237920004[46] = 0;
   out_3578738013237920004[47] = 0;
   out_3578738013237920004[48] = 0;
   out_3578738013237920004[49] = 0;
   out_3578738013237920004[50] = 0;
   out_3578738013237920004[51] = 0;
   out_3578738013237920004[52] = 0;
   out_3578738013237920004[53] = 0;
   out_3578738013237920004[54] = 0;
   out_3578738013237920004[55] = 0;
   out_3578738013237920004[56] = 0;
   out_3578738013237920004[57] = 0;
   out_3578738013237920004[58] = 0;
   out_3578738013237920004[59] = 0;
   out_3578738013237920004[60] = 0;
   out_3578738013237920004[61] = 0;
   out_3578738013237920004[62] = 1;
   out_3578738013237920004[63] = 0;
   out_3578738013237920004[64] = 0;
   out_3578738013237920004[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1525046797953799792) {
  H(in_vec, out_1525046797953799792);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6787273198622262185) {
  err_fun(nom_x, delta_x, out_6787273198622262185);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1163963483344490897) {
  inv_err_fun(nom_x, true_x, out_1163963483344490897);
}
void live_H_mod_fun(double *state, double *out_2148830550237504684) {
  H_mod_fun(state, out_2148830550237504684);
}
void live_f_fun(double *state, double dt, double *out_9175569816144614590) {
  f_fun(state,  dt, out_9175569816144614590);
}
void live_F_fun(double *state, double dt, double *out_6638881892447955891) {
  F_fun(state,  dt, out_6638881892447955891);
}
void live_h_4(double *state, double *unused, double *out_4748581981128319294) {
  h_4(state, unused, out_4748581981128319294);
}
void live_H_4(double *state, double *unused, double *out_8350786998460166632) {
  H_4(state, unused, out_8350786998460166632);
}
void live_h_9(double *state, double *unused, double *out_3299619827359850763) {
  h_9(state, unused, out_3299619827359850763);
}
void live_H_9(double *state, double *unused, double *out_2808738139984937514) {
  H_9(state, unused, out_2808738139984937514);
}
void live_h_10(double *state, double *unused, double *out_6759185635745913961) {
  h_10(state, unused, out_6759185635745913961);
}
void live_H_10(double *state, double *unused, double *out_8931560196458308531) {
  H_10(state, unused, out_8931560196458308531);
}
void live_h_12(double *state, double *unused, double *out_3977376211679548972) {
  h_12(state, unused, out_3977376211679548972);
}
void live_H_12(double *state, double *unused, double *out_8971886023507760299) {
  H_12(state, unused, out_8971886023507760299);
}
void live_h_35(double *state, double *unused, double *out_6053256877303408526) {
  h_35(state, unused, out_6053256877303408526);
}
void live_H_35(double *state, double *unused, double *out_6729295017876777608) {
  H_35(state, unused, out_6729295017876777608);
}
void live_h_32(double *state, double *unused, double *out_8660421758678747156) {
  h_32(state, unused, out_8660421758678747156);
}
void live_H_32(double *state, double *unused, double *out_6598130232936037139) {
  H_32(state, unused, out_6598130232936037139);
}
void live_h_13(double *state, double *unused, double *out_1407584935076879677) {
  h_13(state, unused, out_1407584935076879677);
}
void live_H_13(double *state, double *unused, double *out_2297943131464073829) {
  H_13(state, unused, out_2297943131464073829);
}
void live_h_14(double *state, double *unused, double *out_3299619827359850763) {
  h_14(state, unused, out_3299619827359850763);
}
void live_H_14(double *state, double *unused, double *out_2808738139984937514) {
  H_14(state, unused, out_2808738139984937514);
}
void live_h_33(double *state, double *unused, double *out_2880611375828088826) {
  h_33(state, unused, out_2880611375828088826);
}
void live_H_33(double *state, double *unused, double *out_3578738013237920004) {
  H_33(state, unused, out_3578738013237920004);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
